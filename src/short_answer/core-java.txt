***ANSWER ALL OF THE QUESTIONS BELOW***

What is a programming language?
Answer:A set of grammatical rules for instructing a computer to perform specific tasks.

What is a JDK composed of? Define each components?
Answer:JDK is composed of Java Runtime Enviroment(JRE), An interpreter/loader (Java), a compiler(javac) and an archiver(jar).

What is an IDE?
Answer:Integrated Development Enviroment is a software application that enables users to write and debug Java programs more easily.

What are some of the most popular Java IDEs available in the market?
Answer:IntelliJ IDEA, Eclipse, NetBeans, Blue J, JDeveloper, JCreator

Explain the entire java life cycle.
Answer:
Life cycle of a java program tells us what happens right from the point when we type source code
in a text editor to the point that source code is converted into machine code(0's and 1's). There are
three main stages in the life cycle of a java program. They are editing the program, compiling the source code,
and executing the byte code.

What is a class?
Answer: A logical template to create objects that share common properties and methods.

What is an object?
Answer: An object is an instance of a Java class, meaning it is a copy of specific class.

What is the entry point of a Java project?
Answer: The Java main method is ususally the first method you learn about when you start programming
in Java because its the entry point for executing a Java program. The main method can contain code
to execute or call other methods and it can be placed in any class that's part of a program.

Why is the main() method static?
Answer: So that JVM can invoke it without instantiating the class.

Which class is the superclass of all classes?
Answer: Parent class

What is difference between path and classpath variables?
Answer: Path is set for Java tools in Java programs which are used to compile your code. Classpath
is used by System or Application class leader to locate and load compile Java bytecodes stored in the
'. class file'.

What is the difference between an Interface and Abstract class?
Answer: Abstract class can have can have abstract and non-abstract methods. Interface can have only
abstract methods.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: It cannot be done. To implement features of an abstract class, we inherit subclasses from it and create objects
of the subclass. A subclass must override all abstract methods of an abstract class.

What is Access Modifier?
Answer: Keywords in object-oriented languages that set the accessibility of classes, methods, and
other members. Access modifiers are a specific part of programming language syntax used to facilitate
the encapsulation of components.

What is OOP? Define each OOP concept.
Answer:Object-Oriented Programming. Abstraction - identifying only the required characteristics of an
object ignoring the irrevlevant details. Encapsulation - Hiding/wrapping data. Inheritance - It is
the mechanism in Java by which one class is allowed to inherit the features(fields and methods) of
another class. Polymorphism - performs a single action in different ways.

What is Java Package and which package is imported by default?
Answer: Package is the collection of Java classes and interfaces. java.lang

What is an API? List some API's that you have used so far.
Answer:

Does java support multiple inheritance? Why or why not?
Answer:

What is method overloading? List all of the different ways to overload.
Answer:

Explain exceptions in java and how to handle them.
Answer:

What is static keyword? When and how do we use it?
Answer:

What is final keyword? When and how do we use it?
Answer:

Explain the difference between final, finally and finalize?
Answer:

What is a constructor?
Answer:

Can we have multiple constructors in a class?
Answer:

If we don't have a constructor declared, what is called during the object creation?
Answer:

What is "this" keyword in Java? When would we use it?
Answer:

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:

What does JVM stand for?
Answer:

Is JVM platform independent?
Answer:

What version of Java are you using?
Answer:

What does JAR stand for?
Answer:

What is the difference between JDK and JVM?
Answer:

What is the difference between JVM and JRE?
Answer:

Explain the difference between compile-time and run-time?
Answer:

What is heap?
Answer:

How does Java manage its memory?
Answer:

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:

What is the difference between stack and heap in Java?
Answer:

What is reflection in Java and why is it useful?
Answer:

What is multithreading in Java?
Answer:

What is synchronization in Java?
Answer:

What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer:

What is dependency injection in Java?
Answer:

Explain what static binding and dynamic binding is?
Answer: